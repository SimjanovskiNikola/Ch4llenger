<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="773.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="569"><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::make_move (1 samples, 0.18%)</title><rect x="0.0000%" y="213" width="0.1757%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="223.50"></text></g><g><title>chess_engine::engine::move_generation::perft::tests::test_perft_init_pos_five::{{closure}} (2 samples, 0.35%)</title><rect x="0.0000%" y="341" width="0.3515%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="351.50"></text></g><g><title>chess_engine::engine::move_generation::perft::tests::test_perft_init_pos_five (2 samples, 0.35%)</title><rect x="0.0000%" y="325" width="0.3515%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="335.50"></text></g><g><title>chess_engine::engine::move_generation::perft::init_test_func (2 samples, 0.35%)</title><rect x="0.0000%" y="309" width="0.3515%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2"/><text x="0.2500%" y="319.50"></text></g><g><title>chess_engine::engine::move_generation::perft::perft (2 samples, 0.35%)</title><rect x="0.0000%" y="293" width="0.3515%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="2"/><text x="0.2500%" y="303.50"></text></g><g><title>chess_engine::engine::move_generation::perft::perft (2 samples, 0.35%)</title><rect x="0.0000%" y="277" width="0.3515%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="2"/><text x="0.2500%" y="287.50"></text></g><g><title>chess_engine::engine::move_generation::perft::perft (2 samples, 0.35%)</title><rect x="0.0000%" y="261" width="0.3515%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="2"/><text x="0.2500%" y="271.50"></text></g><g><title>chess_engine::engine::move_generation::perft::perft (2 samples, 0.35%)</title><rect x="0.0000%" y="245" width="0.3515%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="2"/><text x="0.2500%" y="255.50"></text></g><g><title>chess_engine::engine::move_generation::perft::perft (2 samples, 0.35%)</title><rect x="0.0000%" y="229" width="0.3515%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="2"/><text x="0.2500%" y="239.50"></text></g><g><title>chess_engine::engine::move_generation::perft::perft (1 samples, 0.18%)</title><rect x="0.1757%" y="213" width="0.1757%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.4257%" y="223.50"></text></g><g><title>chess_engine::engine::move_generation::perft::Stats::add_all_node (1 samples, 0.18%)</title><rect x="0.1757%" y="197" width="0.1757%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.4257%" y="207.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::undo_move (1 samples, 0.18%)</title><rect x="0.3515%" y="213" width="0.1757%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="0.6015%" y="223.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::make_move (4 samples, 0.70%)</title><rect x="0.5272%" y="197" width="0.7030%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="4"/><text x="0.7772%" y="207.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::sq_attack (3 samples, 0.53%)</title><rect x="0.7030%" y="181" width="0.5272%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="3"/><text x="0.9530%" y="191.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::quiet_mv (1 samples, 0.18%)</title><rect x="1.2302%" y="197" width="0.1757%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="1"/><text x="1.4802%" y="207.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::undo_move (1 samples, 0.18%)</title><rect x="1.4060%" y="197" width="0.1757%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="1"/><text x="1.6560%" y="207.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::gen_moves (1 samples, 0.18%)</title><rect x="1.5817%" y="197" width="0.1757%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="1"/><text x="1.8317%" y="207.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::get_all_moves (1 samples, 0.18%)</title><rect x="1.5817%" y="181" width="0.1757%" height="15" fill="rgb(210,31,41)" fg:x="9" fg:w="1"/><text x="1.8317%" y="191.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::quiet_mv (16 samples, 2.81%)</title><rect x="7.0299%" y="165" width="2.8120%" height="15" fill="rgb(221,200,47)" fg:x="40" fg:w="16"/><text x="7.2799%" y="175.50">&lt;c..</text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::make_move (108 samples, 18.98%)</title><rect x="2.8120%" y="181" width="18.9807%" height="15" fill="rgb(226,26,5)" fg:x="16" fg:w="108"/><text x="3.0620%" y="191.50">&lt;chess_engine::engine::game::G..</text></g><g><title>chess_engine::engine::move_generation::mv_gen::sq_attack (68 samples, 11.95%)</title><rect x="9.8418%" y="165" width="11.9508%" height="15" fill="rgb(249,33,26)" fg:x="56" fg:w="68"/><text x="10.0918%" y="175.50">chess_engine::engi..</text></g><g><title>chess_engine::engine::attacks::bishop::get_bishop_mv (5 samples, 0.88%)</title><rect x="20.9139%" y="149" width="0.8787%" height="15" fill="rgb(235,183,28)" fg:x="119" fg:w="5"/><text x="21.1639%" y="159.50"></text></g><g><title>chess_engine::engine::attacks::utility::pext (2 samples, 0.35%)</title><rect x="21.4411%" y="133" width="0.3515%" height="15" fill="rgb(221,5,38)" fg:x="122" fg:w="2"/><text x="21.6911%" y="143.50"></text></g><g><title>core::core_arch::x86_64::bmi2::_pext_u64 (1 samples, 0.18%)</title><rect x="21.6169%" y="117" width="0.1757%" height="15" fill="rgb(247,18,42)" fg:x="123" fg:w="1"/><text x="21.8669%" y="127.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::quiet_mv (13 samples, 2.28%)</title><rect x="21.7926%" y="181" width="2.2847%" height="15" fill="rgb(241,131,45)" fg:x="124" fg:w="13"/><text x="22.0426%" y="191.50">&lt;..</text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::undo_move (5 samples, 0.88%)</title><rect x="24.0773%" y="181" width="0.8787%" height="15" fill="rgb(249,31,29)" fg:x="137" fg:w="5"/><text x="24.3273%" y="191.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.70%)</title><rect x="25.3076%" y="165" width="0.7030%" height="15" fill="rgb(225,111,53)" fg:x="144" fg:w="4"/><text x="25.5576%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.70%)</title><rect x="26.0105%" y="165" width="0.7030%" height="15" fill="rgb(238,160,17)" fg:x="148" fg:w="4"/><text x="26.2605%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.70%)</title><rect x="26.0105%" y="149" width="0.7030%" height="15" fill="rgb(214,148,48)" fg:x="148" fg:w="4"/><text x="26.2605%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.70%)</title><rect x="26.0105%" y="133" width="0.7030%" height="15" fill="rgb(232,36,49)" fg:x="148" fg:w="4"/><text x="26.2605%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4 samples, 0.70%)</title><rect x="26.0105%" y="117" width="0.7030%" height="15" fill="rgb(209,103,24)" fg:x="148" fg:w="4"/><text x="26.2605%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4 samples, 0.70%)</title><rect x="26.0105%" y="101" width="0.7030%" height="15" fill="rgb(229,88,8)" fg:x="148" fg:w="4"/><text x="26.2605%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.35%)</title><rect x="26.3620%" y="85" width="0.3515%" height="15" fill="rgb(213,181,19)" fg:x="150" fg:w="2"/><text x="26.6120%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.35%)</title><rect x="26.3620%" y="69" width="0.3515%" height="15" fill="rgb(254,191,54)" fg:x="150" fg:w="2"/><text x="26.6120%" y="79.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.35%)</title><rect x="26.3620%" y="53" width="0.3515%" height="15" fill="rgb(241,83,37)" fg:x="150" fg:w="2"/><text x="26.6120%" y="63.50"></text></g><g><title>malloc (1 samples, 0.18%)</title><rect x="26.5378%" y="37" width="0.1757%" height="15" fill="rgb(233,36,39)" fg:x="151" fg:w="1"/><text x="26.7878%" y="47.50"></text></g><g><title>chess_engine::engine::attacks::bishop::get_bishop_mv (2 samples, 0.35%)</title><rect x="26.7135%" y="165" width="0.3515%" height="15" fill="rgb(226,3,54)" fg:x="152" fg:w="2"/><text x="26.9635%" y="175.50"></text></g><g><title>chess_engine::engine::attacks::queen::get_queen_mv (1 samples, 0.18%)</title><rect x="27.0650%" y="165" width="0.1757%" height="15" fill="rgb(245,192,40)" fg:x="154" fg:w="1"/><text x="27.3150%" y="175.50"></text></g><g><title>chess_engine::engine::attacks::rook::get_rook_mv (1 samples, 0.18%)</title><rect x="27.0650%" y="149" width="0.1757%" height="15" fill="rgb(238,167,29)" fg:x="154" fg:w="1"/><text x="27.3150%" y="159.50"></text></g><g><title>chess_engine::engine::attacks::pawn::get_pawn_att (6 samples, 1.05%)</title><rect x="28.1195%" y="149" width="1.0545%" height="15" fill="rgb(232,182,51)" fg:x="160" fg:w="6"/><text x="28.3695%" y="159.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::get_all_moves (16 samples, 2.81%)</title><rect x="27.2408%" y="165" width="2.8120%" height="15" fill="rgb(231,60,39)" fg:x="155" fg:w="16"/><text x="27.4908%" y="175.50">ch..</text></g><g><title>chess_engine::engine::attacks::pawn::get_pawn_mv (5 samples, 0.88%)</title><rect x="29.1740%" y="149" width="0.8787%" height="15" fill="rgb(208,69,12)" fg:x="166" fg:w="5"/><text x="29.4240%" y="159.50"></text></g><g><title>&lt;u64 as chess_engine::engine::shared::helper_func::bitboard::BitboardTrait&gt;::get_msb (5 samples, 0.88%)</title><rect x="29.1740%" y="133" width="0.8787%" height="15" fill="rgb(235,93,37)" fg:x="166" fg:w="5"/><text x="29.4240%" y="143.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::gen_moves (39 samples, 6.85%)</title><rect x="24.9561%" y="181" width="6.8541%" height="15" fill="rgb(213,116,39)" fg:x="142" fg:w="39"/><text x="25.2061%" y="191.50">chess_eng..</text></g><g><title>chess_engine::engine::move_generation::mv_gen::get_internal_moves (10 samples, 1.76%)</title><rect x="30.0527%" y="165" width="1.7575%" height="15" fill="rgb(222,207,29)" fg:x="171" fg:w="10"/><text x="30.3027%" y="175.50"></text></g><g><title>chess_engine::engine::move_generation::perft::tests::test_perft_init_pos_six::{{closure}} (185 samples, 32.51%)</title><rect x="0.3515%" y="341" width="32.5132%" height="15" fill="rgb(206,96,30)" fg:x="2" fg:w="185"/><text x="0.6015%" y="351.50">chess_engine::engine::move_generation::perft::tests::..</text></g><g><title>chess_engine::engine::move_generation::perft::tests::test_perft_init_pos_six (185 samples, 32.51%)</title><rect x="0.3515%" y="325" width="32.5132%" height="15" fill="rgb(218,138,4)" fg:x="2" fg:w="185"/><text x="0.6015%" y="335.50">chess_engine::engine::move_generation::perft::tests::..</text></g><g><title>chess_engine::engine::move_generation::perft::profiler_init_test_func (185 samples, 32.51%)</title><rect x="0.3515%" y="309" width="32.5132%" height="15" fill="rgb(250,191,14)" fg:x="2" fg:w="185"/><text x="0.6015%" y="319.50">chess_engine::engine::move_generation::perft::profile..</text></g><g><title>chess_engine::engine::move_generation::perft::init_test_func (185 samples, 32.51%)</title><rect x="0.3515%" y="293" width="32.5132%" height="15" fill="rgb(239,60,40)" fg:x="2" fg:w="185"/><text x="0.6015%" y="303.50">chess_engine::engine::move_generation::perft::init_te..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (185 samples, 32.51%)</title><rect x="0.3515%" y="277" width="32.5132%" height="15" fill="rgb(206,27,48)" fg:x="2" fg:w="185"/><text x="0.6015%" y="287.50">chess_engine::engine::move_generation::perft::perft</text></g><g><title>chess_engine::engine::move_generation::perft::perft (185 samples, 32.51%)</title><rect x="0.3515%" y="261" width="32.5132%" height="15" fill="rgb(225,35,8)" fg:x="2" fg:w="185"/><text x="0.6015%" y="271.50">chess_engine::engine::move_generation::perft::perft</text></g><g><title>chess_engine::engine::move_generation::perft::perft (185 samples, 32.51%)</title><rect x="0.3515%" y="245" width="32.5132%" height="15" fill="rgb(250,213,24)" fg:x="2" fg:w="185"/><text x="0.6015%" y="255.50">chess_engine::engine::move_generation::perft::perft</text></g><g><title>chess_engine::engine::move_generation::perft::perft (185 samples, 32.51%)</title><rect x="0.3515%" y="229" width="32.5132%" height="15" fill="rgb(247,123,22)" fg:x="2" fg:w="185"/><text x="0.6015%" y="239.50">chess_engine::engine::move_generation::perft::perft</text></g><g><title>chess_engine::engine::move_generation::perft::perft (184 samples, 32.34%)</title><rect x="0.5272%" y="213" width="32.3374%" height="15" fill="rgb(231,138,38)" fg:x="3" fg:w="184"/><text x="0.7772%" y="223.50">chess_engine::engine::move_generation::perft::perft</text></g><g><title>chess_engine::engine::move_generation::perft::perft (177 samples, 31.11%)</title><rect x="1.7575%" y="197" width="31.1072%" height="15" fill="rgb(231,145,46)" fg:x="10" fg:w="177"/><text x="2.0075%" y="207.50">chess_engine::engine::move_generation::perft::perft</text></g><g><title>chess_engine::engine::move_generation::perft::perft (6 samples, 1.05%)</title><rect x="31.8102%" y="181" width="1.0545%" height="15" fill="rgb(251,118,11)" fg:x="181" fg:w="6"/><text x="32.0602%" y="191.50"></text></g><g><title>chess_engine::engine::move_generation::perft::Stats::add_all_node (6 samples, 1.05%)</title><rect x="31.8102%" y="165" width="1.0545%" height="15" fill="rgb(217,147,25)" fg:x="181" fg:w="6"/><text x="32.0602%" y="175.50"></text></g><g><title>chess_engine::engine::move_generation::perft::tests::test_perft_pos_five_depth_4::{{closure}} (2 samples, 0.35%)</title><rect x="32.8647%" y="341" width="0.3515%" height="15" fill="rgb(247,81,37)" fg:x="187" fg:w="2"/><text x="33.1147%" y="351.50"></text></g><g><title>chess_engine::engine::move_generation::perft::tests::test_perft_pos_five_depth_4 (2 samples, 0.35%)</title><rect x="32.8647%" y="325" width="0.3515%" height="15" fill="rgb(209,12,38)" fg:x="187" fg:w="2"/><text x="33.1147%" y="335.50"></text></g><g><title>chess_engine::engine::move_generation::perft::init_test_func (2 samples, 0.35%)</title><rect x="32.8647%" y="309" width="0.3515%" height="15" fill="rgb(227,1,9)" fg:x="187" fg:w="2"/><text x="33.1147%" y="319.50"></text></g><g><title>chess_engine::engine::move_generation::perft::perft (2 samples, 0.35%)</title><rect x="32.8647%" y="293" width="0.3515%" height="15" fill="rgb(248,47,43)" fg:x="187" fg:w="2"/><text x="33.1147%" y="303.50"></text></g><g><title>chess_engine::engine::move_generation::perft::perft (2 samples, 0.35%)</title><rect x="32.8647%" y="277" width="0.3515%" height="15" fill="rgb(221,10,30)" fg:x="187" fg:w="2"/><text x="33.1147%" y="287.50"></text></g><g><title>chess_engine::engine::move_generation::perft::perft (2 samples, 0.35%)</title><rect x="32.8647%" y="261" width="0.3515%" height="15" fill="rgb(210,229,1)" fg:x="187" fg:w="2"/><text x="33.1147%" y="271.50"></text></g><g><title>chess_engine::engine::move_generation::perft::perft (2 samples, 0.35%)</title><rect x="32.8647%" y="245" width="0.3515%" height="15" fill="rgb(222,148,37)" fg:x="187" fg:w="2"/><text x="33.1147%" y="255.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::make_move (2 samples, 0.35%)</title><rect x="32.8647%" y="229" width="0.3515%" height="15" fill="rgb(234,67,33)" fg:x="187" fg:w="2"/><text x="33.1147%" y="239.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::sq_attack (1 samples, 0.18%)</title><rect x="33.0404%" y="213" width="0.1757%" height="15" fill="rgb(247,98,35)" fg:x="188" fg:w="1"/><text x="33.2904%" y="223.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::quiet_mv (1 samples, 0.18%)</title><rect x="33.3919%" y="213" width="0.1757%" height="15" fill="rgb(247,138,52)" fg:x="190" fg:w="1"/><text x="33.6419%" y="223.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::make_move (3 samples, 0.53%)</title><rect x="33.2162%" y="229" width="0.5272%" height="15" fill="rgb(213,79,30)" fg:x="189" fg:w="3"/><text x="33.4662%" y="239.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::sq_attack (1 samples, 0.18%)</title><rect x="33.5677%" y="213" width="0.1757%" height="15" fill="rgb(246,177,23)" fg:x="191" fg:w="1"/><text x="33.8177%" y="223.50"></text></g><g><title>chess_engine::engine::attacks::pawn::get_pawn_att (1 samples, 0.18%)</title><rect x="33.5677%" y="197" width="0.1757%" height="15" fill="rgb(230,62,27)" fg:x="191" fg:w="1"/><text x="33.8177%" y="207.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::undo_move (1 samples, 0.18%)</title><rect x="33.7434%" y="229" width="0.1757%" height="15" fill="rgb(216,154,8)" fg:x="192" fg:w="1"/><text x="33.9934%" y="239.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::gen_moves (1 samples, 0.18%)</title><rect x="33.9192%" y="229" width="0.1757%" height="15" fill="rgb(244,35,45)" fg:x="193" fg:w="1"/><text x="34.1692%" y="239.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.18%)</title><rect x="33.9192%" y="213" width="0.1757%" height="15" fill="rgb(251,115,12)" fg:x="193" fg:w="1"/><text x="34.1692%" y="223.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.18%)</title><rect x="33.9192%" y="197" width="0.1757%" height="15" fill="rgb(240,54,50)" fg:x="193" fg:w="1"/><text x="34.1692%" y="207.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.18%)</title><rect x="33.9192%" y="181" width="0.1757%" height="15" fill="rgb(233,84,52)" fg:x="193" fg:w="1"/><text x="34.1692%" y="191.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.18%)</title><rect x="33.9192%" y="165" width="0.1757%" height="15" fill="rgb(207,117,47)" fg:x="193" fg:w="1"/><text x="34.1692%" y="175.50"></text></g><g><title>core::ops::index_range::IndexRange::len (1 samples, 0.18%)</title><rect x="33.9192%" y="149" width="0.1757%" height="15" fill="rgb(249,43,39)" fg:x="193" fg:w="1"/><text x="34.1692%" y="159.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::add_piece (1 samples, 0.18%)</title><rect x="35.6766%" y="213" width="0.1757%" height="15" fill="rgb(209,38,44)" fg:x="203" fg:w="1"/><text x="35.9266%" y="223.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::add_piece (3 samples, 0.53%)</title><rect x="35.8524%" y="197" width="0.5272%" height="15" fill="rgb(236,212,23)" fg:x="204" fg:w="3"/><text x="36.1024%" y="207.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::clear_piece (1 samples, 0.18%)</title><rect x="36.3796%" y="197" width="0.1757%" height="15" fill="rgb(242,79,21)" fg:x="207" fg:w="1"/><text x="36.6296%" y="207.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::quiet_mv (10 samples, 1.76%)</title><rect x="36.5554%" y="197" width="1.7575%" height="15" fill="rgb(211,96,35)" fg:x="208" fg:w="10"/><text x="36.8054%" y="207.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::replace_piece (1 samples, 0.18%)</title><rect x="38.3128%" y="197" width="0.1757%" height="15" fill="rgb(253,215,40)" fg:x="218" fg:w="1"/><text x="38.5628%" y="207.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::undo_move (1 samples, 0.18%)</title><rect x="38.4886%" y="197" width="0.1757%" height="15" fill="rgb(211,81,21)" fg:x="219" fg:w="1"/><text x="38.7386%" y="207.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::sq_attack (44 samples, 7.73%)</title><rect x="38.6643%" y="197" width="7.7329%" height="15" fill="rgb(208,190,38)" fg:x="220" fg:w="44"/><text x="38.9143%" y="207.50">chess_engin..</text></g><g><title>chess_engine::engine::attacks::bishop::get_bishop_mv (3 samples, 0.53%)</title><rect x="45.8699%" y="181" width="0.5272%" height="15" fill="rgb(235,213,38)" fg:x="261" fg:w="3"/><text x="46.1199%" y="191.50"></text></g><g><title>chess_engine::engine::attacks::utility::pext (1 samples, 0.18%)</title><rect x="46.2214%" y="165" width="0.1757%" height="15" fill="rgb(237,122,38)" fg:x="263" fg:w="1"/><text x="46.4714%" y="175.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::make_move (79 samples, 13.88%)</title><rect x="35.8524%" y="213" width="13.8840%" height="15" fill="rgb(244,218,35)" fg:x="204" fg:w="79"/><text x="36.1024%" y="223.50">&lt;chess_engine::engine..</text></g><g><title>chess_engine::engine::shared::structures::castling_struct::CastlingRights::is_set (19 samples, 3.34%)</title><rect x="46.3972%" y="197" width="3.3392%" height="15" fill="rgb(240,68,47)" fg:x="264" fg:w="19"/><text x="46.6472%" y="207.50">che..</text></g><g><title>chess_engine::engine::shared::structures::castling_struct::CastlingRights::val (19 samples, 3.34%)</title><rect x="46.3972%" y="181" width="3.3392%" height="15" fill="rgb(210,16,53)" fg:x="264" fg:w="19"/><text x="46.6472%" y="191.50">che..</text></g><g><title>chess_engine::engine::shared::structures::castling_struct::_::&lt;impl chess_engine::engine::shared::structures::castling_struct::CastlingRights&gt;::bits (19 samples, 3.34%)</title><rect x="46.3972%" y="165" width="3.3392%" height="15" fill="rgb(235,124,12)" fg:x="264" fg:w="19"/><text x="46.6472%" y="175.50">che..</text></g><g><title>chess_engine::engine::shared::structures::castling_struct::_::InternalBitFlags::bits (19 samples, 3.34%)</title><rect x="46.3972%" y="149" width="3.3392%" height="15" fill="rgb(224,169,11)" fg:x="264" fg:w="19"/><text x="46.6472%" y="159.50">che..</text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::quiet_mv (12 samples, 2.11%)</title><rect x="49.7364%" y="213" width="2.1090%" height="15" fill="rgb(250,166,2)" fg:x="283" fg:w="12"/><text x="49.9864%" y="223.50">&lt;..</text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::undo_move (11 samples, 1.93%)</title><rect x="51.8453%" y="213" width="1.9332%" height="15" fill="rgb(242,216,29)" fg:x="295" fg:w="11"/><text x="52.0953%" y="223.50">&lt;..</text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::replace_piece (2 samples, 0.35%)</title><rect x="53.4271%" y="197" width="0.3515%" height="15" fill="rgb(230,116,27)" fg:x="304" fg:w="2"/><text x="53.6771%" y="207.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::clear_piece (1 samples, 0.18%)</title><rect x="53.6028%" y="181" width="0.1757%" height="15" fill="rgb(228,99,48)" fg:x="305" fg:w="1"/><text x="53.8528%" y="191.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.18%)</title><rect x="53.7786%" y="197" width="0.1757%" height="15" fill="rgb(253,11,6)" fg:x="306" fg:w="1"/><text x="54.0286%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.18%)</title><rect x="53.7786%" y="181" width="0.1757%" height="15" fill="rgb(247,143,39)" fg:x="306" fg:w="1"/><text x="54.0286%" y="191.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.18%)</title><rect x="53.7786%" y="165" width="0.1757%" height="15" fill="rgb(236,97,10)" fg:x="306" fg:w="1"/><text x="54.0286%" y="175.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.18%)</title><rect x="53.7786%" y="149" width="0.1757%" height="15" fill="rgb(233,208,19)" fg:x="306" fg:w="1"/><text x="54.0286%" y="159.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.18%)</title><rect x="53.7786%" y="133" width="0.1757%" height="15" fill="rgb(216,164,2)" fg:x="306" fg:w="1"/><text x="54.0286%" y="143.50"></text></g><g><title>core::ptr::read (1 samples, 0.18%)</title><rect x="53.7786%" y="117" width="0.1757%" height="15" fill="rgb(220,129,5)" fg:x="306" fg:w="1"/><text x="54.0286%" y="127.50"></text></g><g><title>chess_engine::engine::attacks::bishop::get_bishop_mv (1 samples, 0.18%)</title><rect x="53.9543%" y="197" width="0.1757%" height="15" fill="rgb(242,17,10)" fg:x="307" fg:w="1"/><text x="54.2043%" y="207.50"></text></g><g><title>chess_engine::engine::attacks::queen::get_queen_mv (1 samples, 0.18%)</title><rect x="54.1301%" y="197" width="0.1757%" height="15" fill="rgb(242,107,0)" fg:x="308" fg:w="1"/><text x="54.3801%" y="207.50"></text></g><g><title>chess_engine::engine::attacks::rook::get_rook_mv (1 samples, 0.18%)</title><rect x="54.1301%" y="181" width="0.1757%" height="15" fill="rgb(251,28,31)" fg:x="308" fg:w="1"/><text x="54.3801%" y="191.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::get_all_moves (5 samples, 0.88%)</title><rect x="54.3058%" y="197" width="0.8787%" height="15" fill="rgb(233,223,10)" fg:x="309" fg:w="5"/><text x="54.5558%" y="207.50"></text></g><g><title>chess_engine::engine::attacks::pawn::get_pawn_mv (3 samples, 0.53%)</title><rect x="54.6573%" y="181" width="0.5272%" height="15" fill="rgb(215,21,27)" fg:x="311" fg:w="3"/><text x="54.9073%" y="191.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::gen_moves (24 samples, 4.22%)</title><rect x="53.7786%" y="213" width="4.2179%" height="15" fill="rgb(232,23,21)" fg:x="306" fg:w="24"/><text x="54.0286%" y="223.50">chess..</text></g><g><title>chess_engine::engine::move_generation::mv_gen::get_internal_moves (16 samples, 2.81%)</title><rect x="55.1845%" y="197" width="2.8120%" height="15" fill="rgb(244,5,23)" fg:x="314" fg:w="16"/><text x="55.4345%" y="207.50">ch..</text></g><g><title>chess_engine::engine::move_generation::mv_gen::add_castling_moves (2 samples, 0.35%)</title><rect x="57.6450%" y="181" width="0.3515%" height="15" fill="rgb(226,81,46)" fg:x="328" fg:w="2"/><text x="57.8950%" y="191.50"></text></g><g><title>chess_engine::engine::shared::structures::castling_struct::CastlingRights::valid (2 samples, 0.35%)</title><rect x="57.6450%" y="165" width="0.3515%" height="15" fill="rgb(247,70,30)" fg:x="328" fg:w="2"/><text x="57.8950%" y="175.50"></text></g><g><title>chess_engine::engine::shared::structures::castling_struct::CastlingRights::sq_att (2 samples, 0.35%)</title><rect x="57.6450%" y="149" width="0.3515%" height="15" fill="rgb(212,68,19)" fg:x="328" fg:w="2"/><text x="57.8950%" y="159.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::sq_attack (2 samples, 0.35%)</title><rect x="57.6450%" y="133" width="0.3515%" height="15" fill="rgb(240,187,13)" fg:x="328" fg:w="2"/><text x="57.8950%" y="143.50"></text></g><g><title>chess_engine::engine::attacks::bishop::get_bishop_mv (1 samples, 0.18%)</title><rect x="57.8207%" y="117" width="0.1757%" height="15" fill="rgb(223,113,26)" fg:x="329" fg:w="1"/><text x="58.0707%" y="127.50"></text></g><g><title>chess_engine::engine::attacks::utility::pext (1 samples, 0.18%)</title><rect x="57.8207%" y="101" width="0.1757%" height="15" fill="rgb(206,192,2)" fg:x="329" fg:w="1"/><text x="58.0707%" y="111.50"></text></g><g><title>chess_engine::engine::move_generation::perft::perft (6 samples, 1.05%)</title><rect x="57.9965%" y="213" width="1.0545%" height="15" fill="rgb(241,108,4)" fg:x="330" fg:w="6"/><text x="58.2465%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.18%)</title><rect x="59.0510%" y="149" width="0.1757%" height="15" fill="rgb(247,173,49)" fg:x="336" fg:w="1"/><text x="59.3010%" y="159.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.18%)</title><rect x="59.0510%" y="133" width="0.1757%" height="15" fill="rgb(224,114,35)" fg:x="336" fg:w="1"/><text x="59.3010%" y="143.50"></text></g><g><title>chess_engine::engine::move_generation::perft::tests::test_perft_pos_five_depth_5::{{closure}} (149 samples, 26.19%)</title><rect x="33.2162%" y="341" width="26.1863%" height="15" fill="rgb(245,159,27)" fg:x="189" fg:w="149"/><text x="33.4662%" y="351.50">chess_engine::engine::move_generation::per..</text></g><g><title>chess_engine::engine::move_generation::perft::tests::test_perft_pos_five_depth_5 (149 samples, 26.19%)</title><rect x="33.2162%" y="325" width="26.1863%" height="15" fill="rgb(245,172,44)" fg:x="189" fg:w="149"/><text x="33.4662%" y="335.50">chess_engine::engine::move_generation::per..</text></g><g><title>chess_engine::engine::move_generation::perft::init_test_func (149 samples, 26.19%)</title><rect x="33.2162%" y="309" width="26.1863%" height="15" fill="rgb(236,23,11)" fg:x="189" fg:w="149"/><text x="33.4662%" y="319.50">chess_engine::engine::move_generation::per..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (149 samples, 26.19%)</title><rect x="33.2162%" y="293" width="26.1863%" height="15" fill="rgb(205,117,38)" fg:x="189" fg:w="149"/><text x="33.4662%" y="303.50">chess_engine::engine::move_generation::per..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (149 samples, 26.19%)</title><rect x="33.2162%" y="277" width="26.1863%" height="15" fill="rgb(237,72,25)" fg:x="189" fg:w="149"/><text x="33.4662%" y="287.50">chess_engine::engine::move_generation::per..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (149 samples, 26.19%)</title><rect x="33.2162%" y="261" width="26.1863%" height="15" fill="rgb(244,70,9)" fg:x="189" fg:w="149"/><text x="33.4662%" y="271.50">chess_engine::engine::move_generation::per..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (149 samples, 26.19%)</title><rect x="33.2162%" y="245" width="26.1863%" height="15" fill="rgb(217,125,39)" fg:x="189" fg:w="149"/><text x="33.4662%" y="255.50">chess_engine::engine::move_generation::per..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (144 samples, 25.31%)</title><rect x="34.0949%" y="229" width="25.3076%" height="15" fill="rgb(235,36,10)" fg:x="194" fg:w="144"/><text x="34.3449%" y="239.50">chess_engine::engine::move_generation::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chess_engine::engine::shared::structures::internal_move::InternalMove&gt;&gt; (2 samples, 0.35%)</title><rect x="59.0510%" y="213" width="0.3515%" height="15" fill="rgb(251,123,47)" fg:x="336" fg:w="2"/><text x="59.3010%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chess_engine::engine::shared::structures::internal_move::InternalMove&gt;&gt; (2 samples, 0.35%)</title><rect x="59.0510%" y="197" width="0.3515%" height="15" fill="rgb(221,13,13)" fg:x="336" fg:w="2"/><text x="59.3010%" y="207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.35%)</title><rect x="59.0510%" y="181" width="0.3515%" height="15" fill="rgb(238,131,9)" fg:x="336" fg:w="2"/><text x="59.3010%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2 samples, 0.35%)</title><rect x="59.0510%" y="165" width="0.3515%" height="15" fill="rgb(211,50,8)" fg:x="336" fg:w="2"/><text x="59.3010%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.18%)</title><rect x="59.2267%" y="149" width="0.1757%" height="15" fill="rgb(245,182,24)" fg:x="337" fg:w="1"/><text x="59.4767%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.18%)</title><rect x="59.2267%" y="133" width="0.1757%" height="15" fill="rgb(242,14,37)" fg:x="337" fg:w="1"/><text x="59.4767%" y="143.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked::precondition_check (1 samples, 0.18%)</title><rect x="59.2267%" y="117" width="0.1757%" height="15" fill="rgb(246,228,12)" fg:x="337" fg:w="1"/><text x="59.4767%" y="127.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::make_move (1 samples, 0.18%)</title><rect x="59.4025%" y="229" width="0.1757%" height="15" fill="rgb(213,55,15)" fg:x="338" fg:w="1"/><text x="59.6525%" y="239.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::quiet_mv (2 samples, 0.35%)</title><rect x="60.4569%" y="197" width="0.3515%" height="15" fill="rgb(209,9,3)" fg:x="344" fg:w="2"/><text x="60.7069%" y="207.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::make_move (13 samples, 2.28%)</title><rect x="59.5782%" y="213" width="2.2847%" height="15" fill="rgb(230,59,30)" fg:x="339" fg:w="13"/><text x="59.8282%" y="223.50">&lt;..</text></g><g><title>chess_engine::engine::move_generation::mv_gen::sq_attack (6 samples, 1.05%)</title><rect x="60.8084%" y="197" width="1.0545%" height="15" fill="rgb(209,121,21)" fg:x="346" fg:w="6"/><text x="61.0584%" y="207.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::undo_move (2 samples, 0.35%)</title><rect x="61.8629%" y="213" width="0.3515%" height="15" fill="rgb(220,109,13)" fg:x="352" fg:w="2"/><text x="62.1129%" y="223.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::get_all_moves (2 samples, 0.35%)</title><rect x="62.2144%" y="197" width="0.3515%" height="15" fill="rgb(232,18,1)" fg:x="354" fg:w="2"/><text x="62.4644%" y="207.50"></text></g><g><title>chess_engine::engine::move_generation::perft::tests::test_perft_pos_four_depth_5::{{closure}} (20 samples, 3.51%)</title><rect x="59.4025%" y="341" width="3.5149%" height="15" fill="rgb(215,41,42)" fg:x="338" fg:w="20"/><text x="59.6525%" y="351.50">che..</text></g><g><title>chess_engine::engine::move_generation::perft::tests::test_perft_pos_four_depth_5 (20 samples, 3.51%)</title><rect x="59.4025%" y="325" width="3.5149%" height="15" fill="rgb(224,123,36)" fg:x="338" fg:w="20"/><text x="59.6525%" y="335.50">che..</text></g><g><title>chess_engine::engine::move_generation::perft::init_test_func (20 samples, 3.51%)</title><rect x="59.4025%" y="309" width="3.5149%" height="15" fill="rgb(240,125,3)" fg:x="338" fg:w="20"/><text x="59.6525%" y="319.50">che..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (20 samples, 3.51%)</title><rect x="59.4025%" y="293" width="3.5149%" height="15" fill="rgb(205,98,50)" fg:x="338" fg:w="20"/><text x="59.6525%" y="303.50">che..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (20 samples, 3.51%)</title><rect x="59.4025%" y="277" width="3.5149%" height="15" fill="rgb(205,185,37)" fg:x="338" fg:w="20"/><text x="59.6525%" y="287.50">che..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (20 samples, 3.51%)</title><rect x="59.4025%" y="261" width="3.5149%" height="15" fill="rgb(238,207,15)" fg:x="338" fg:w="20"/><text x="59.6525%" y="271.50">che..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (20 samples, 3.51%)</title><rect x="59.4025%" y="245" width="3.5149%" height="15" fill="rgb(213,199,42)" fg:x="338" fg:w="20"/><text x="59.6525%" y="255.50">che..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (19 samples, 3.34%)</title><rect x="59.5782%" y="229" width="3.3392%" height="15" fill="rgb(235,201,11)" fg:x="339" fg:w="19"/><text x="59.8282%" y="239.50">che..</text></g><g><title>chess_engine::engine::move_generation::mv_gen::gen_moves (4 samples, 0.70%)</title><rect x="62.2144%" y="213" width="0.7030%" height="15" fill="rgb(207,46,11)" fg:x="354" fg:w="4"/><text x="62.4644%" y="223.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::get_internal_moves (2 samples, 0.35%)</title><rect x="62.5659%" y="197" width="0.3515%" height="15" fill="rgb(241,35,35)" fg:x="356" fg:w="2"/><text x="62.8159%" y="207.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::quiet_mv (1 samples, 0.18%)</title><rect x="62.9174%" y="213" width="0.1757%" height="15" fill="rgb(243,32,47)" fg:x="358" fg:w="1"/><text x="63.1674%" y="223.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::add_piece (1 samples, 0.18%)</title><rect x="63.0931%" y="181" width="0.1757%" height="15" fill="rgb(247,202,23)" fg:x="359" fg:w="1"/><text x="63.3431%" y="191.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::make_move (6 samples, 1.05%)</title><rect x="63.0931%" y="197" width="1.0545%" height="15" fill="rgb(219,102,11)" fg:x="359" fg:w="6"/><text x="63.3431%" y="207.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::sq_attack (5 samples, 0.88%)</title><rect x="63.2689%" y="181" width="0.8787%" height="15" fill="rgb(243,110,44)" fg:x="360" fg:w="5"/><text x="63.5189%" y="191.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::quiet_mv (1 samples, 0.18%)</title><rect x="64.1476%" y="197" width="0.1757%" height="15" fill="rgb(222,74,54)" fg:x="365" fg:w="1"/><text x="64.3976%" y="207.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::undo_move (1 samples, 0.18%)</title><rect x="64.3234%" y="197" width="0.1757%" height="15" fill="rgb(216,99,12)" fg:x="366" fg:w="1"/><text x="64.5734%" y="207.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::get_all_moves (1 samples, 0.18%)</title><rect x="64.4991%" y="181" width="0.1757%" height="15" fill="rgb(226,22,26)" fg:x="367" fg:w="1"/><text x="64.7491%" y="191.50"></text></g><g><title>chess_engine::engine::move_generation::perft::tests::test_perft_pos_three_depth_6::{{closure}} (13 samples, 2.28%)</title><rect x="62.9174%" y="341" width="2.2847%" height="15" fill="rgb(217,163,10)" fg:x="358" fg:w="13"/><text x="63.1674%" y="351.50">c..</text></g><g><title>chess_engine::engine::move_generation::perft::tests::test_perft_pos_three_depth_6 (13 samples, 2.28%)</title><rect x="62.9174%" y="325" width="2.2847%" height="15" fill="rgb(213,25,53)" fg:x="358" fg:w="13"/><text x="63.1674%" y="335.50">c..</text></g><g><title>chess_engine::engine::move_generation::perft::init_test_func (13 samples, 2.28%)</title><rect x="62.9174%" y="309" width="2.2847%" height="15" fill="rgb(252,105,26)" fg:x="358" fg:w="13"/><text x="63.1674%" y="319.50">c..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (13 samples, 2.28%)</title><rect x="62.9174%" y="293" width="2.2847%" height="15" fill="rgb(220,39,43)" fg:x="358" fg:w="13"/><text x="63.1674%" y="303.50">c..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (13 samples, 2.28%)</title><rect x="62.9174%" y="277" width="2.2847%" height="15" fill="rgb(229,68,48)" fg:x="358" fg:w="13"/><text x="63.1674%" y="287.50">c..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (13 samples, 2.28%)</title><rect x="62.9174%" y="261" width="2.2847%" height="15" fill="rgb(252,8,32)" fg:x="358" fg:w="13"/><text x="63.1674%" y="271.50">c..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (13 samples, 2.28%)</title><rect x="62.9174%" y="245" width="2.2847%" height="15" fill="rgb(223,20,43)" fg:x="358" fg:w="13"/><text x="63.1674%" y="255.50">c..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (13 samples, 2.28%)</title><rect x="62.9174%" y="229" width="2.2847%" height="15" fill="rgb(229,81,49)" fg:x="358" fg:w="13"/><text x="63.1674%" y="239.50">c..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (12 samples, 2.11%)</title><rect x="63.0931%" y="213" width="2.1090%" height="15" fill="rgb(236,28,36)" fg:x="359" fg:w="12"/><text x="63.3431%" y="223.50">c..</text></g><g><title>chess_engine::engine::move_generation::mv_gen::gen_moves (4 samples, 0.70%)</title><rect x="64.4991%" y="197" width="0.7030%" height="15" fill="rgb(249,185,26)" fg:x="367" fg:w="4"/><text x="64.7491%" y="207.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::get_internal_moves (3 samples, 0.53%)</title><rect x="64.6749%" y="181" width="0.5272%" height="15" fill="rgb(249,174,33)" fg:x="368" fg:w="3"/><text x="64.9249%" y="191.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::add_piece (1 samples, 0.18%)</title><rect x="66.6081%" y="181" width="0.1757%" height="15" fill="rgb(233,201,37)" fg:x="379" fg:w="1"/><text x="66.8581%" y="191.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::quiet_mv (3 samples, 0.53%)</title><rect x="66.7838%" y="181" width="0.5272%" height="15" fill="rgb(221,78,26)" fg:x="380" fg:w="3"/><text x="67.0338%" y="191.50"></text></g><g><title>&lt;chess_engine::engine::move_generation::make_move::PieceKeys as core::ops::deref::Deref&gt;::deref (3 samples, 0.53%)</title><rect x="66.7838%" y="165" width="0.5272%" height="15" fill="rgb(250,127,30)" fg:x="380" fg:w="3"/><text x="67.0338%" y="175.50"></text></g><g><title>&lt;chess_engine::engine::move_generation::make_move::PieceKeys as core::ops::deref::Deref&gt;::deref::__stability (3 samples, 0.53%)</title><rect x="66.7838%" y="149" width="0.5272%" height="15" fill="rgb(230,49,44)" fg:x="380" fg:w="3"/><text x="67.0338%" y="159.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (3 samples, 0.53%)</title><rect x="66.7838%" y="133" width="0.5272%" height="15" fill="rgb(229,67,23)" fg:x="380" fg:w="3"/><text x="67.0338%" y="143.50"></text></g><g><title>std::sync::once::Once::call_once (3 samples, 0.53%)</title><rect x="66.7838%" y="117" width="0.5272%" height="15" fill="rgb(249,83,47)" fg:x="380" fg:w="3"/><text x="67.0338%" y="127.50"></text></g><g><title>std::sys::sync::once::futex::Once::is_completed (3 samples, 0.53%)</title><rect x="66.7838%" y="101" width="0.5272%" height="15" fill="rgb(215,43,3)" fg:x="380" fg:w="3"/><text x="67.0338%" y="111.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::undo_move (1 samples, 0.18%)</title><rect x="67.3111%" y="181" width="0.1757%" height="15" fill="rgb(238,154,13)" fg:x="383" fg:w="1"/><text x="67.5611%" y="191.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::make_move (18 samples, 3.16%)</title><rect x="65.3779%" y="197" width="3.1634%" height="15" fill="rgb(219,56,2)" fg:x="372" fg:w="18"/><text x="65.6279%" y="207.50">&lt;ch..</text></g><g><title>chess_engine::engine::move_generation::mv_gen::sq_attack (6 samples, 1.05%)</title><rect x="67.4868%" y="181" width="1.0545%" height="15" fill="rgb(233,0,4)" fg:x="384" fg:w="6"/><text x="67.7368%" y="191.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::quiet_mv (1 samples, 0.18%)</title><rect x="68.5413%" y="197" width="0.1757%" height="15" fill="rgb(235,30,7)" fg:x="390" fg:w="1"/><text x="68.7913%" y="207.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::undo_move (3 samples, 0.53%)</title><rect x="68.7170%" y="197" width="0.5272%" height="15" fill="rgb(250,79,13)" fg:x="391" fg:w="3"/><text x="68.9670%" y="207.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::gen_moves (1 samples, 0.18%)</title><rect x="69.2443%" y="197" width="0.1757%" height="15" fill="rgb(211,146,34)" fg:x="394" fg:w="1"/><text x="69.4943%" y="207.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::get_internal_moves (1 samples, 0.18%)</title><rect x="69.2443%" y="181" width="0.1757%" height="15" fill="rgb(228,22,38)" fg:x="394" fg:w="1"/><text x="69.4943%" y="191.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::add_castling_moves (1 samples, 0.18%)</title><rect x="69.2443%" y="165" width="0.1757%" height="15" fill="rgb(235,168,5)" fg:x="394" fg:w="1"/><text x="69.4943%" y="175.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::quiet_mv (18 samples, 3.16%)</title><rect x="69.9473%" y="165" width="3.1634%" height="15" fill="rgb(221,155,16)" fg:x="398" fg:w="18"/><text x="70.1973%" y="175.50">&lt;ch..</text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::replace_piece (5 samples, 0.88%)</title><rect x="73.1107%" y="165" width="0.8787%" height="15" fill="rgb(215,215,53)" fg:x="416" fg:w="5"/><text x="73.3607%" y="175.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::clear_piece (3 samples, 0.53%)</title><rect x="73.4622%" y="149" width="0.5272%" height="15" fill="rgb(223,4,10)" fg:x="418" fg:w="3"/><text x="73.7122%" y="159.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::undo_move (2 samples, 0.35%)</title><rect x="73.9895%" y="165" width="0.3515%" height="15" fill="rgb(234,103,6)" fg:x="421" fg:w="2"/><text x="74.2395%" y="175.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::sq_attack (52 samples, 9.14%)</title><rect x="74.3409%" y="165" width="9.1388%" height="15" fill="rgb(227,97,0)" fg:x="423" fg:w="52"/><text x="74.5909%" y="175.50">chess_engine:..</text></g><g><title>chess_engine::engine::attacks::bishop::get_bishop_mv (9 samples, 1.58%)</title><rect x="81.8981%" y="149" width="1.5817%" height="15" fill="rgb(234,150,53)" fg:x="466" fg:w="9"/><text x="82.1481%" y="159.50"></text></g><g><title>chess_engine::engine::attacks::utility::pext (3 samples, 0.53%)</title><rect x="82.9525%" y="133" width="0.5272%" height="15" fill="rgb(228,201,54)" fg:x="472" fg:w="3"/><text x="83.2025%" y="143.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::make_move (110 samples, 19.33%)</title><rect x="69.7715%" y="181" width="19.3322%" height="15" fill="rgb(222,22,37)" fg:x="397" fg:w="110"/><text x="70.0215%" y="191.50">&lt;chess_engine::engine::game::G..</text></g><g><title>chess_engine::engine::shared::structures::castling_struct::CastlingRights::clear (32 samples, 5.62%)</title><rect x="83.4798%" y="165" width="5.6239%" height="15" fill="rgb(237,53,32)" fg:x="475" fg:w="32"/><text x="83.7298%" y="175.50">chess_e..</text></g><g><title>chess_engine::engine::shared::structures::castling_struct::_::&lt;impl core::ops::bit::BitAndAssign for chess_engine::engine::shared::structures::castling_struct::CastlingRights&gt;::bitand_assign (32 samples, 5.62%)</title><rect x="83.4798%" y="149" width="5.6239%" height="15" fill="rgb(233,25,53)" fg:x="475" fg:w="32"/><text x="83.7298%" y="159.50">chess_e..</text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::quiet_mv (11 samples, 1.93%)</title><rect x="89.1037%" y="181" width="1.9332%" height="15" fill="rgb(210,40,34)" fg:x="507" fg:w="11"/><text x="89.3537%" y="191.50">&lt;..</text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::undo_move (15 samples, 2.64%)</title><rect x="91.0369%" y="181" width="2.6362%" height="15" fill="rgb(241,220,44)" fg:x="518" fg:w="15"/><text x="91.2869%" y="191.50">&lt;c..</text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::replace_piece (3 samples, 0.53%)</title><rect x="93.1459%" y="165" width="0.5272%" height="15" fill="rgb(235,28,35)" fg:x="530" fg:w="3"/><text x="93.3959%" y="175.50"></text></g><g><title>&lt;chess_engine::engine::game::Game as chess_engine::engine::move_generation::make_move::GameMoveTrait&gt;::clear_piece (1 samples, 0.18%)</title><rect x="93.4974%" y="149" width="0.1757%" height="15" fill="rgb(210,56,17)" fg:x="532" fg:w="1"/><text x="93.7474%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.35%)</title><rect x="93.6731%" y="165" width="0.3515%" height="15" fill="rgb(224,130,29)" fg:x="533" fg:w="2"/><text x="93.9231%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.35%)</title><rect x="93.6731%" y="149" width="0.3515%" height="15" fill="rgb(235,212,8)" fg:x="533" fg:w="2"/><text x="93.9231%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.35%)</title><rect x="93.6731%" y="133" width="0.3515%" height="15" fill="rgb(223,33,50)" fg:x="533" fg:w="2"/><text x="93.9231%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2 samples, 0.35%)</title><rect x="93.6731%" y="117" width="0.3515%" height="15" fill="rgb(219,149,13)" fg:x="533" fg:w="2"/><text x="93.9231%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2 samples, 0.35%)</title><rect x="93.6731%" y="101" width="0.3515%" height="15" fill="rgb(250,156,29)" fg:x="533" fg:w="2"/><text x="93.9231%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.35%)</title><rect x="93.6731%" y="85" width="0.3515%" height="15" fill="rgb(216,193,19)" fg:x="533" fg:w="2"/><text x="93.9231%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.35%)</title><rect x="93.6731%" y="69" width="0.3515%" height="15" fill="rgb(216,135,14)" fg:x="533" fg:w="2"/><text x="93.9231%" y="79.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.35%)</title><rect x="93.6731%" y="53" width="0.3515%" height="15" fill="rgb(241,47,5)" fg:x="533" fg:w="2"/><text x="93.9231%" y="63.50"></text></g><g><title>malloc (2 samples, 0.35%)</title><rect x="93.6731%" y="37" width="0.3515%" height="15" fill="rgb(233,42,35)" fg:x="533" fg:w="2"/><text x="93.9231%" y="47.50"></text></g><g><title>chess_engine::engine::attacks::pawn::get_pawn_att (1 samples, 0.18%)</title><rect x="94.5518%" y="149" width="0.1757%" height="15" fill="rgb(231,13,6)" fg:x="538" fg:w="1"/><text x="94.8018%" y="159.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::get_all_moves (6 samples, 1.05%)</title><rect x="94.0246%" y="165" width="1.0545%" height="15" fill="rgb(207,181,40)" fg:x="535" fg:w="6"/><text x="94.2746%" y="175.50"></text></g><g><title>chess_engine::engine::attacks::pawn::get_pawn_mv (2 samples, 0.35%)</title><rect x="94.7276%" y="149" width="0.3515%" height="15" fill="rgb(254,173,49)" fg:x="539" fg:w="2"/><text x="94.9776%" y="159.50"></text></g><g><title>chess_engine::engine::move_generation::mv_gen::gen_moves (30 samples, 5.27%)</title><rect x="93.6731%" y="181" width="5.2724%" height="15" fill="rgb(221,1,38)" fg:x="533" fg:w="30"/><text x="93.9231%" y="191.50">chess_..</text></g><g><title>chess_engine::engine::move_generation::mv_gen::get_internal_moves (22 samples, 3.87%)</title><rect x="95.0791%" y="165" width="3.8664%" height="15" fill="rgb(206,124,46)" fg:x="541" fg:w="22"/><text x="95.3291%" y="175.50">ches..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (2 samples, 0.35%)</title><rect x="98.9455%" y="181" width="0.3515%" height="15" fill="rgb(249,21,11)" fg:x="563" fg:w="2"/><text x="99.1955%" y="191.50"></text></g><g><title>all (569 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(222,201,40)" fg:x="0" fg:w="569"/><text x="0.2500%" y="751.50"></text></g><g><title>engine::move_ge (569 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(235,61,29)" fg:x="0" fg:w="569"/><text x="0.2500%" y="735.50">engine::move_ge</text></g><g><title>__clone (569 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(219,207,3)" fg:x="0" fg:w="569"/><text x="0.2500%" y="719.50">__clone</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (569 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(222,56,46)" fg:x="0" fg:w="569"/><text x="0.2500%" y="703.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (569 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(239,76,54)" fg:x="0" fg:w="569"/><text x="0.2500%" y="687.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (569 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(231,124,27)" fg:x="0" fg:w="569"/><text x="0.2500%" y="671.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (569 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(249,195,6)" fg:x="0" fg:w="569"/><text x="0.2500%" y="655.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (569 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(237,174,47)" fg:x="0" fg:w="569"/><text x="0.2500%" y="639.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (569 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(206,201,31)" fg:x="0" fg:w="569"/><text x="0.2500%" y="623.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (569 samples, 100.00%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(231,57,52)" fg:x="0" fg:w="569"/><text x="0.2500%" y="607.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (569 samples, 100.00%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(248,177,22)" fg:x="0" fg:w="569"/><text x="0.2500%" y="591.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (569 samples, 100.00%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(215,211,37)" fg:x="0" fg:w="569"/><text x="0.2500%" y="575.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (569 samples, 100.00%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(241,128,51)" fg:x="0" fg:w="569"/><text x="0.2500%" y="559.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (569 samples, 100.00%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(227,165,31)" fg:x="0" fg:w="569"/><text x="0.2500%" y="543.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>test::run_test::{{closure}} (569 samples, 100.00%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(228,167,24)" fg:x="0" fg:w="569"/><text x="0.2500%" y="527.50">test::run_test::{{closure}}</text></g><g><title>test::run_test::{{closure}} (569 samples, 100.00%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(228,143,12)" fg:x="0" fg:w="569"/><text x="0.2500%" y="511.50">test::run_test::{{closure}}</text></g><g><title>test::run_test_in_process (569 samples, 100.00%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(249,149,8)" fg:x="0" fg:w="569"/><text x="0.2500%" y="495.50">test::run_test_in_process</text></g><g><title>std::panic::catch_unwind (569 samples, 100.00%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(243,35,44)" fg:x="0" fg:w="569"/><text x="0.2500%" y="479.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (569 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(246,89,9)" fg:x="0" fg:w="569"/><text x="0.2500%" y="463.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (569 samples, 100.00%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(233,213,13)" fg:x="0" fg:w="569"/><text x="0.2500%" y="447.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (569 samples, 100.00%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(233,141,41)" fg:x="0" fg:w="569"/><text x="0.2500%" y="431.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>test::run_test_in_process::{{closure}} (569 samples, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(239,167,4)" fg:x="0" fg:w="569"/><text x="0.2500%" y="415.50">test::run_test_in_process::{{closure}}</text></g><g><title>test::__rust_begin_short_backtrace (569 samples, 100.00%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(209,217,16)" fg:x="0" fg:w="569"/><text x="0.2500%" y="399.50">test::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (569 samples, 100.00%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(219,88,35)" fg:x="0" fg:w="569"/><text x="0.2500%" y="383.50">core::ops::function::FnOnce::call_once</text></g><g><title>core::ops::function::FnOnce::call_once (569 samples, 100.00%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(220,193,23)" fg:x="0" fg:w="569"/><text x="0.2500%" y="367.50">core::ops::function::FnOnce::call_once</text></g><g><title>chess_engine::engine::move_generation::perft::tests::test_perft_pos_three_depth_7::{{closure}} (198 samples, 34.80%)</title><rect x="65.2021%" y="341" width="34.7979%" height="15" fill="rgb(230,90,52)" fg:x="371" fg:w="198"/><text x="65.4521%" y="351.50">chess_engine::engine::move_generation::perft::tests::tes..</text></g><g><title>chess_engine::engine::move_generation::perft::tests::test_perft_pos_three_depth_7 (198 samples, 34.80%)</title><rect x="65.2021%" y="325" width="34.7979%" height="15" fill="rgb(252,106,19)" fg:x="371" fg:w="198"/><text x="65.4521%" y="335.50">chess_engine::engine::move_generation::perft::tests::tes..</text></g><g><title>chess_engine::engine::move_generation::perft::init_test_func (198 samples, 34.80%)</title><rect x="65.2021%" y="309" width="34.7979%" height="15" fill="rgb(206,74,20)" fg:x="371" fg:w="198"/><text x="65.4521%" y="319.50">chess_engine::engine::move_generation::perft::init_test_..</text></g><g><title>chess_engine::engine::move_generation::perft::perft (198 samples, 34.80%)</title><rect x="65.2021%" y="293" width="34.7979%" height="15" fill="rgb(230,138,44)" fg:x="371" fg:w="198"/><text x="65.4521%" y="303.50">chess_engine::engine::move_generation::perft::perft</text></g><g><title>chess_engine::engine::move_generation::perft::perft (198 samples, 34.80%)</title><rect x="65.2021%" y="277" width="34.7979%" height="15" fill="rgb(235,182,43)" fg:x="371" fg:w="198"/><text x="65.4521%" y="287.50">chess_engine::engine::move_generation::perft::perft</text></g><g><title>chess_engine::engine::move_generation::perft::perft (198 samples, 34.80%)</title><rect x="65.2021%" y="261" width="34.7979%" height="15" fill="rgb(242,16,51)" fg:x="371" fg:w="198"/><text x="65.4521%" y="271.50">chess_engine::engine::move_generation::perft::perft</text></g><g><title>chess_engine::engine::move_generation::perft::perft (198 samples, 34.80%)</title><rect x="65.2021%" y="245" width="34.7979%" height="15" fill="rgb(248,9,4)" fg:x="371" fg:w="198"/><text x="65.4521%" y="255.50">chess_engine::engine::move_generation::perft::perft</text></g><g><title>chess_engine::engine::move_generation::perft::perft (198 samples, 34.80%)</title><rect x="65.2021%" y="229" width="34.7979%" height="15" fill="rgb(210,31,22)" fg:x="371" fg:w="198"/><text x="65.4521%" y="239.50">chess_engine::engine::move_generation::perft::perft</text></g><g><title>chess_engine::engine::move_generation::perft::perft (198 samples, 34.80%)</title><rect x="65.2021%" y="213" width="34.7979%" height="15" fill="rgb(239,54,39)" fg:x="371" fg:w="198"/><text x="65.4521%" y="223.50">chess_engine::engine::move_generation::perft::perft</text></g><g><title>chess_engine::engine::move_generation::perft::perft (174 samples, 30.58%)</title><rect x="69.4200%" y="197" width="30.5800%" height="15" fill="rgb(230,99,41)" fg:x="395" fg:w="174"/><text x="69.6700%" y="207.50">chess_engine::engine::move_generation::perft::per..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chess_engine::engine::shared::structures::internal_move::InternalMove&gt;&gt; (4 samples, 0.70%)</title><rect x="99.2970%" y="181" width="0.7030%" height="15" fill="rgb(253,106,12)" fg:x="565" fg:w="4"/><text x="99.5470%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chess_engine::engine::shared::structures::internal_move::InternalMove&gt;&gt; (4 samples, 0.70%)</title><rect x="99.2970%" y="165" width="0.7030%" height="15" fill="rgb(213,46,41)" fg:x="565" fg:w="4"/><text x="99.5470%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.70%)</title><rect x="99.2970%" y="149" width="0.7030%" height="15" fill="rgb(215,133,35)" fg:x="565" fg:w="4"/><text x="99.5470%" y="159.50"></text></g><g><title>cfree (3 samples, 0.53%)</title><rect x="99.4728%" y="133" width="0.5272%" height="15" fill="rgb(213,28,5)" fg:x="566" fg:w="3"/><text x="99.7228%" y="143.50"></text></g></svg></svg>